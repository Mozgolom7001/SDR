Функция Печать() Экспорт
	
	Если 1=1 Тогда
		
		ПечатьСОбластями();
		
	Иначе
		
		ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаКомментариев.УдалитьСообщения();
		
		ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапкеДокумента().Выбрать();
		ВыборкаПоШапкеДокумента.Следующий();
		
		ВыборкаПоТЧРаботникиОрганизации = СформироватьЗапросПоТЧРаботникиОрганизации().Выбрать();
		
		Отказ = Ложь;
		
		Заголовок = ОбщегоНазначенияЗК.ПредставлениеДокументаПриПроведении(СсылкаНаОбъект);
		
		ПроверкаЗаполненияШапкиДокумента(ВыборкаПоШапкеДокумента, Отказ, Заголовок);
		
		Пока ВыборкаПоТЧРаботникиОрганизации.Следующий() Цикл
			
			ПроверитьЗаполнениеСтрокиТЧРаботникиОрганизации(ВыборкаПоТЧРаботникиОрганизации, Отказ, Заголовок);
			
		КонецЦикла; 
		
		Если Отказ Тогда
			
			ОбработкаКомментариев.ПоказатьСообщения();
			
			Возврат Неопределено;
			
		КонецЕсли; 
		
		ВыборкаПоТЧРаботникиОрганизации.Сбросить();
		
		ТабДокумент = Новый ТабличныйДокумент;
		
		ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаявлениеВФССДополнительныеДниОтпуска";
		
		Макет = ПолучитьМакет("Макет");
		
		ТабДокумент.ПолеСверху 	= 0;
		ТабДокумент.ПолеСлева 	= 0;
		ТабДокумент.ПолеСнизу 	= 0;
		ТабДокумент.ПолеСправа 	= 0;
		
		ВыведеноСтрок = 0;
		ИтогоПособия = 0;
		ИтогоСреднедневнойЗаработок = 0;
		ВсегоСтраниц = 0;
		ИтогоПособияСВзносами = 0;
		
		ТекущиеТарифыСВ = РасчетСтраховыхВзносов.ТекущиеТарифыСтраховыхВзносовПоВидамТарифа(СсылкаНаОбъект.Дата);
		ТарифСВ = ТекущиеТарифыСВ.Найти(Перечисления.ТарифыСтраховыхВзносов.ОбщийНалоговыйРежим);
		
		Пока ВыборкаПоТЧРаботникиОрганизации.Следующий() Цикл
			
			ВыведеноСтрок = (ВыведеноСтрок + 1) % 4;
			Если ВыведеноСтрок = 1 Тогда
				Если Макет <> Неопределено Тогда
					//ОбменСведениямиОПособияхСФСС.ВывестиСуммуВРубляхКопейкахВЯчейки(ИтогоСреднедневнойЗаработок, Макет, "ИтогоРазмерПособия_", 9);
					//ОбменСведениямиОПособияхСФСС.ВывестиСуммуВРубляхКопейкахВЯчейки(ИтогоПособия, Макет, "ИтогоРазмерПособия2_", 9);
					//ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Строка(ВсегоСтраниц), Макет, "КоличествоСтраниц_", 2);
					//ТабДокумент.Вывести(Макет);
					//ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;
				ИтогоПособия = 0;
				ВсегоСтраниц = 0;
				Макет = МакетЗаявленияОВозмещенииСЗаполненнымиШапкойИПодвалом(ВыборкаПоШапкеДокумента, Макет )
			КонецЕсли;
			
			Фамилия = ВыборкаПоТЧРаботникиОрганизации.Фамилия;
			Имя = ВыборкаПоТЧРаботникиОрганизации.Имя;
			Отчество = ВыборкаПоТЧРаботникиОрганизации.Отчество;
			Если Не ЗначениеЗаполнено(Фамилия) Тогда
				ОбщегоНазначенияЗК.ФамилияИнициалыФизЛица(ВыборкаПоТЧРаботникиОрганизации.ФИОСотрудника, Фамилия, Имя, Отчество);
			КонецЕсли;
			
			НомерСтроки = ?(ВыведеноСтрок = 0, 4, ВыведеноСтрок);
			ПрефиксСтроки = "ФИО_" + Формат(НомерСтроки,"ЧЦ=2; ЧВН=") + "_";
			ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(ВРег(Фамилия), Макет, ПрефиксСтроки, 19);
			ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(ВРег(Имя), 	Макет, ПрефиксСтроки, 19, 20);
			ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(ВРег(Отчество),Макет, ПрефиксСтроки, 19, 39);
			ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(ВыборкаПоТЧРаботникиОрганизации.НормаДней, Макет, "Дни" + НомерСтроки + "_", 1);
			
			ОбменСведениямиОПособияхСФСС.ВывестиСуммуВРубляхКопейкахВЯчейки(ВыборкаПоТЧРаботникиОрганизации.СреднийРасчетный, Макет, "РазмерПособия" + НомерСтроки + "_", 6);
			//Макет.Области["Статус" + НомерСтроки].Текст = ВыборкаПоТЧРаботникиОрганизации.Статус;
			ОбменСведениямиОПособияхСФСС.ВывестиСуммуВРубляхКопейкахВЯчейки(ВыборкаПоТЧРаботникиОрганизации.СуммаПособия, Макет, "СуммаВыплаты" + НомерСтроки + "_", 7);
			
			ДанныеВзносов = ЗаполнитьВзносы(ТарифСВ, ВыборкаПоТЧРаботникиОрганизации.СуммаПособия);
			
			ОбменСведениямиОПособияхСФСС.ВывестиСуммуВРубляхКопейкахВЯчейки(ДанныеВзносов.ПФР, Макет, "ПФР" + НомерСтроки + "_", 7);
			ОбменСведениямиОПособияхСФСС.ВывестиСуммуВРубляхКопейкахВЯчейки(ДанныеВзносов.ФСС, Макет, "ФСС" + НомерСтроки + "_", 7);
			ОбменСведениямиОПособияхСФСС.ВывестиСуммуВРубляхКопейкахВЯчейки(ДанныеВзносов.ФФОМС, Макет, "ФФОМС" + НомерСтроки + "_", 7);
			
			
			ИтогоСреднедневнойЗаработок = ИтогоСреднедневнойЗаработок + ВыборкаПоТЧРаботникиОрганизации.СреднийРасчетный;
			ИтогоПособия = ИтогоПособия + ВыборкаПоТЧРаботникиОрганизации.СуммаПособия;
			ИтогоПособияСВзносами = ИтогоПособияСВзносами + ВыборкаПоТЧРаботникиОрганизации.СуммаПособия + ДанныеВзносов.ПФР + ДанныеВзносов.ФСС + ДанныеВзносов.ФФОМС;
			
			//ВсегоСтраниц = ВсегоСтраниц + ВыборкаПоТЧРаботникиОрганизации.КоличествоСтраниц;
			
		КонецЦикла;
		
		
		МассивПараметровИзКомментария = ОбщегоНазначенияЗК.РазложитьСтрокуВМассивПодстрок(СсылкаНаОбъект.Комментарий, " ");
		
		ИндексКБК = МассивПараметровИзКомментария.Найти("КБК");
		Если ИндексКБК <> Неопределено Тогда
			
			КБК = МассивПараметровИзКомментария[ИндексКБК+1];
			ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(КБК, Макет, "КБК_", 20);
			
		КонецЕсли;
		
		
		
		
		//ОбменСведениямиОПособияхСФСС.ВывестиСуммуВРубляхКопейкахВЯчейки(ИтогоСреднедневнойЗаработок, Макет, "ИтогоРазмерПособия_", 9);
		ОбменСведениямиОПособияхСФСС.ВывестиСуммуВРубляхКопейкахВЯчейки(ИтогоПособия, Макет, "ИтогоРазмерПособия", 9);
		ОбменСведениямиОПособияхСФСС.ВывестиСуммуВРубляхКопейкахВЯчейки(ИтогоПособияСВзносами, Макет, "ИтогоСВзносами", 10);
		//ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Строка(ВсегоСтраниц), Макет, "КоличествоСтраниц_", 2);
		ТабДокумент.Вывести(Макет);
		
	КонецЕсли;
	Возврат УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, 1, Ложь, "Заявление о возмещении расходов на оплату выходных дней (ВНЕШНИЙ)", , ТабДокумент);
	//Возврат ТабДокумент;	
	
КонецФункции // Печать()

// Собирает сведения по щапке документа для вывода напечать и проверки заполнения
//
// Параметры
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция СформироватьЗапросПоШапкеДокумента()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаявлениеВФССНаДетейИнвалидов.Ссылка,
	|	ЗаявлениеВФССНаДетейИнвалидов.Номер,
	|	ЗаявлениеВФССНаДетейИнвалидов.Дата,
	|	ЗаявлениеВФССНаДетейИнвалидов.Организация КАК Организация,
	|	ЗаявлениеВФССНаДетейИнвалидов.НаименованиеТерриториальногоОрганаФСС,
	|	ЗаявлениеВФССНаДетейИнвалидов.РегистрационныйНомерФСС,
	|	ЗаявлениеВФССНаДетейИнвалидов.ДополнительныйКодФСС,
	|	ЗаявлениеВФССНаДетейИнвалидов.КодПодчиненностиФСС,
	|	ЗаявлениеВФССНаДетейИнвалидов.АдресОрганизации,
	|	ЗаявлениеВФССНаДетейИнвалидов.Руководитель,
	|	ЗаявлениеВФССНаДетейИнвалидов.ДолжностьРуководителя,
	|	ЗаявлениеВФССНаДетейИнвалидов.КраткийСоставДокумента,
	|	ЗаявлениеВФССНаДетейИнвалидов.СуммаПособий,
	|	ЗаявлениеВФССНаДетейИнвалидов.КоличествоСтраниц,
	|	ЗаявлениеВФССНаДетейИнвалидов.ТелефонСоставителя,
	|	ЗаявлениеВФССНаДетейИнвалидов.НаименованиеБанка,
	|	ЗаявлениеВФССНаДетейИнвалидов.НомерЛицевогоСчета,
	|	ЗаявлениеВФССНаДетейИнвалидов.НомерСчета,
	|	ЗаявлениеВФССНаДетейИнвалидов.БИКБанка,
	|	ЗаявлениеВФССНаДетейИнвалидов.КоррСчетБанка
	|ПОМЕСТИТЬ ВТДанныеДокумента
	|ИЗ
	|	Документ.ЗаявлениеВФССНаДетейИнвалидов КАК ЗаявлениеВФССНаДетейИнвалидов
	|ГДЕ
	|	ЗаявлениеВФССНаДетейИнвалидов.Ссылка = &ДокументСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВТДанныеДокумента.Ссылка,
	|	ВТДанныеДокумента.Номер,
	|	ВТДанныеДокумента.Дата,
	|	ВТДанныеДокумента.Организация,
	|	ВТДанныеДокумента.Организация.НаименованиеПолное КАК ОрганизацияНаименование,
	|	ВТДанныеДокумента.НаименованиеТерриториальногоОрганаФСС,
	|	ВТДанныеДокумента.РегистрационныйНомерФСС,
	|	ВТДанныеДокумента.ДополнительныйКодФСС,
	|	ВТДанныеДокумента.КодПодчиненностиФСС,
	|	ВТДанныеДокумента.АдресОрганизации,
	|	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество, ВТДанныеДокумента.Руководитель.Наименование) КАК ФИОРуководителя,
	|	ВТДанныеДокумента.ДолжностьРуководителя,
	|	ВТДанныеДокумента.КраткийСоставДокумента,
	|	ВТДанныеДокумента.СуммаПособий,
	|	ВТДанныеДокумента.КоличествоСтраниц,
	|	ВТДанныеДокумента.Организация.ИНН КАК ИНН,
	|	ВТДанныеДокумента.Организация.КПП КАК КПП,
	|	ВТДанныеДокумента.ТелефонСоставителя,
	|	ВТДанныеДокумента.НаименованиеБанка,
	|	ВТДанныеДокумента.НомерЛицевогоСчета,
	|	ВТДанныеДокумента.НомерСчета,
	|	ВТДанныеДокумента.БИКБанка,
	|	ВТДанныеДокумента.КоррСчетБанка
	|ИЗ
	|	ВТДанныеДокумента КАК ВТДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(
	|				&Дата,
	|				ФизЛицо В
	|					(ВЫБРАТЬ
	|						ВТДанныеДокумента.Руководитель
	|					ИЗ
	|						ВТДанныеДокумента КАК ВТДанныеДокумента)) КАК ФИОФизЛицСрезПоследних
	|		ПО ВТДанныеДокумента.Руководитель = ФИОФизЛицСрезПоследних.ФизЛицо";
	
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", СсылкаНаОбъект);
	Запрос.УстановитьПараметр("Дата", СсылкаНаОбъект.Дата);
	
	Возврат Запрос.Выполнить();	
	
КонецФункции // СформироватьЗапросПоШапкеДокумента()

// Запрос по табличной части РаботникиОрганизации для вывода на печать и проверки корректности заполнения
//
// Параметры
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция СформироватьЗапросПоТЧРаботникиОрганизации()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РаботникиОрганизации.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(РаботникиОрганизации.ДокументОснование.ПериодРегистрации, МЕСЯЦ) КАК Месяц,
	|	СУММА(РаботникиОрганизации.СуммаПособия) КАК СуммаПособия,
	|	СУММА(РаботникиОрганизации.СреднедневнойЗаработок) КАК СреднедневнойЗаработок,
	|	СУММА(ОсновныеНачисленияРаботниковОрганизацийДанныеГрафика.Результат) КАК Результат,
	|	МАКСИМУМ(ОсновныеНачисленияРаботниковОрганизацийДанныеГрафика.ОсновноеЗначениеФактическийПериодДействия) КАК ОсновноеЗначениеФактическийПериодДействия,
	|	СУММА(ЕСТЬNULL(ОсновныеНачисленияРаботниковОрганизацийДанныеГрафика.НормаДней, 0)) КАК НормаДней,
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РаботникиОрганизации.Сотрудник) КАК КоличествоСотрудников
	|ИЗ
	|	Документ.ЗаявлениеВФССНаДетейИнвалидов.РаботникиОрганизации КАК РаботникиОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ДанныеГрафика(
	|				Регистратор В
	|					(ВЫБРАТЬ
	|						ЗаявлениеВФССНаДетейИнвалидовРаботникиОрганизации.ДокументОснование
	|					ИЗ
	|						Документ.ЗаявлениеВФССНаДетейИнвалидов.РаботникиОрганизации КАК ЗаявлениеВФССНаДетейИнвалидовРаботникиОрганизации
	|					ГДЕ
	|						ЗаявлениеВФССНаДетейИнвалидовРаботникиОрганизации.Ссылка = &ДокументСсылка)) КАК ОсновныеНачисленияРаботниковОрганизацийДанныеГрафика
	|		ПО РаботникиОрганизации.ДокументОснование = ОсновныеНачисленияРаботниковОрганизацийДанныеГрафика.Регистратор
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИОФизЛицСрезПоследних
	|		ПО РаботникиОрганизации.ФизЛицо = ФИОФизЛицСрезПоследних.ФизЛицо
	|ГДЕ
	|	РаботникиОрганизации.Ссылка = &ДокументСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РаботникиОрганизации.ФизЛицо,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество,
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	НАЧАЛОПЕРИОДА(РаботникиОрганизации.ДокументОснование.ПериодРегистрации, МЕСЯЦ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Месяц";
	
	
	Запрос.УстановитьПараметр("ДокументСсылка", СсылкаНаОбъект);
	Запрос.УстановитьПараметр("Дата", СсылкаНаОбъект.Дата);
	
	Возврат Запрос.Выполнить();
	
КонецФункции // СформироватьЗапросПоТЧРаботникиОрганизации()

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизитов шапки, влияющий на проведение, не заполнен или
// заполнен некорректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
//
// Параметры: 
//	ВыборкаПоШапкеДокумента	- выборка из результата запрос
//	Отказ 					- флаг отказа
//	Заголовок				- Заголовок для сообщений об ошибках
Процедура ПроверкаЗаполненияШапкиДокумента(ВыборкаПоШапкеДокумента, Отказ, Заголовок)
	
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(ОбщегоНазначенияЗК.ПреобразоватьСтрокуИнтерфейса("Не указана организация!"), Отказ, Заголовок);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.АдресОрганизации) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(ОбщегоНазначенияЗК.ПреобразоватьСтрокуИнтерфейса("Не указан адрес организации!"), Отказ, Заголовок);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.НаименованиеТерриториальногоОрганаФСС) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указано наименование территориального органа ФСС!", Отказ, Заголовок);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.РегистрационныйНомерФСС) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан регистрационный номер в ФСС!", Отказ, Заголовок);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.КодПодчиненностиФСС) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан код подчиненности ФСС!", Отказ, Заголовок);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.СуммаПособий) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указана сумма пособий!", Отказ, Заголовок);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.КоличествоСтраниц) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указано количество страниц!", Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры // ПроверкаЗаполненияШапкиДокумента()

// Проверяет заполненность полей табличной части "РаботникиОрганизации"
// Проверка ведется по строке выборки по табличной части
//
// Параметры
// Параметры: 
//	СтрокаВыборкиПоТЧРаботникиОрганизации	- выборка из результата запрос
//	Отказ 									- флаг отказа
//	Заголовок								- Заголовок для сообщений об ошибках
//
Процедура ПроверитьЗаполнениеСтрокиТЧРаботникиОрганизации(СтрокаВыборкиПоТЧРаботникиОрганизации, Отказ, Заголовок)
	
	//	ТекстОшибкиСНомеромСтроки = НСтр("ru='В строке номер %НомерСтроки% табличной части ""Работники организации"": '");
	//	ТекстОшибкиСНомеромСтроки = СтрЗаменить(ТекстОшибкиСНомеромСтроки, "%НомерСтроки%", СтрокаВыборкиПоТЧРаботникиОрганизации.НомерСтроки);
	
	//Если Не ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.ФИОСотрудника) Тогда
	//	ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(ОбщегоНазначенияЗК.ПреобразоватьСтрокуИнтерфейса(ТекстОшибкиСНомеромСтроки + "Не указан сотрудник!"), Отказ, Заголовок);
	//КонецЕсли;
	
	//Если Не ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.Статус) Тогда
	//	ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(ОбщегоНазначенияЗК.ПреобразоватьСтрокуИнтерфейса(ТекстОшибкиСНомеромСтроки + "Не указан статус!"), Отказ, Заголовок);
	//КонецЕсли;
	//
	//Если Не ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.СреднедневнойЗаработок) Тогда
	//	ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(ОбщегоНазначенияЗК.ПреобразоватьСтрокуИнтерфейса(ТекстОшибкиСНомеромСтроки + "Не указан среднедневной заработок!"), Отказ, Заголовок);
	//КонецЕсли;
	//
	//Если Не ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.СуммаПособия) Тогда
	//	ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(ОбщегоНазначенияЗК.ПреобразоватьСтрокуИнтерфейса(ТекстОшибкиСНомеромСтроки + "Не указана сумма пособия!"), Отказ, Заголовок);
	//КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиТЧРаботникиОрганизации()

Функция МакетЗаявленияОВозмещенииСЗаполненнымиШапкойИПодвалом(СтруктураДанных, Макет)
	
	ДлиныСтрок = Новый Массив();
	ДлиныСтрок.Добавить(28);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(ОбменСведениямиОПособияхСФСС.РазбитьСтрокуНаПодСтроки(ВРег(СтруктураДанных.НаименованиеТерриториальногоОрганаФСС), ДлиныСтрок), Макет, "Наименование_ФСС_", 140);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(ОбменСведениямиОПособияхСФСС.РазбитьСтрокуНаПодСтроки(ВРег(СтруктураДанных.ОрганизацияНаименование), ДлиныСтрок), Макет, "ФИО_Заявителя_", 140);
	
	ДлиныСтрок = Новый Массив();
	ДлиныСтрок.Добавить(43);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(ОбменСведениямиОПособияхСФСС.РазбитьСтрокуНаПодСтроки(ВРег(СтруктураДанных.Организация.НаименованиеСокращенное), ДлиныСтрок), Макет, "Получатель_", 86);
	
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.РегистрационныйНомерФСС, Макет, "РегистрационныйНомер_", 10);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.ДополнительныйКодФСС, Макет, "ДополнительныйКод_", 10);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.КодПодчиненностиФСС, Макет, "КодПодчиненности_", 5);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.ИНН, Макет, "ИНН_", 12);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.КПП, Макет, "КПП_", 9);
	
	СтруктураАдреса = УправлениеКонтактнойИнформацией.ПолучитьСтруктуруАдресаИзСтроки(СтруктураДанных.АдресОрганизации);	
	Если СтруктураАдреса <> Неопределено И СтруктураАдреса.Свойство("Индекс") Тогда
		ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураАдреса.Индекс, Макет, "АдресРегистрации_", 6);
		ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(ВРег(СтруктураАдреса.Регион), Макет, "АдресРегистрации_", 39, 7);
		ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(ВРег(СтруктураАдреса.Район), Макет, "АдресРегистрации_", 39, 40);
		ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(ВРег(СтруктураАдреса.Город), Макет, "АдресРегистрации_", 39, 106);
		//ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(ВРег(?(ЗначениеЗаполнено(СтруктураАдреса.Город), СтруктураАдреса.Город + " " + СтруктураАдреса.НаселенныйПункт, СтруктураАдреса.НаселенныйПункт)), Макет, "АдресРегистрации_", 34, 41);
		ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(ВРег(СтруктураАдреса.Улица), Макет, "АдресРегистрации_", 39, 139);
		ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(ВРег(СтруктураАдреса.Дом), Макет, "АдресРегистрации_", 5, 172);
		Если ВРег(СтруктураАдреса.ТипКорпуса) = "СТРОЕНИЕ" Тогда
			ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(ВРег(СтруктураАдреса.Корпус), Макет, "АдресРегистрации_", 4, 181);
		Иначе
			ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(ВРег(СтруктураАдреса.Корпус), Макет, "АдресРегистрации_", 4, 177);
		КонецЕсли;;
		ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(ВРег(СтруктураАдреса.Квартира), Макет, "АдресРегистрации_", 6, 185);
	КонецЕсли;
	
	ДлиныСтрок = Новый Массив();
	ДлиныСтрок.Добавить(39);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(ОбменСведениямиОПособияхСФСС.РазбитьСтрокуНаПодСтроки(ВРег(СтруктураДанных.НаименованиеБанка), ДлиныСтрок), Макет, "НаименованиеБанка_", 78);
	
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.НомерСчета, Макет, "НомерСчета_", 20);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.БИКБанка, Макет, "БИК_", 9);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.НомерЛицевогоСчета, Макет, "ЛицСчет_", 12);
	
	Телефон = СокрЛП(СтруктураДанных.ТелефонСоставителя);
	Если Лев(Телефон,3) = "+7 " Тогда
		Телефон = Сред(Телефон,4)
	ИначеЕсли Лев(Телефон,2) = "8 " Тогда
		Телефон = Сред(Телефон,3)
	КонецЕсли;
	Телефон = СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(Телефон,"(",""),")","")," ",""),"-",""),",","");
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Телефон, Макет, "ТелефонСоставителя_", 10);
	Макет.Параметры.ДолжностьРуководителя = "" + СтруктураДанных.ДолжностьРуководителя;
	Макет.Параметры.ФИОРуководителя = "" + СтруктураДанных.ФИОРуководителя;
	
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтруктураДанных.КоличествоСтраниц, Макет, "КопииПриказов", 2);
	
	Возврат Макет;	
	
КонецФункции // ()

Функция ЗаполнитьВзносы(Тариф, СуммаПособия)
	
	СтруктураРасчета = Новый Структура;
	
	СтруктураРасчета.Вставить("ПФР", СуммаПособия * Тариф.ПФР / 100);
	СтруктураРасчета.Вставить("ФСС", СуммаПособия * Тариф.ФСС / 100 + СуммаПособия * 0.2 / 100);
	СтруктураРасчета.Вставить("ФФОМС", СуммаПособия * Тариф.ФФОМС / 100);
	
	Возврат СтруктураРасчета;
	
КонецФункции

Функция ПечатьСОбластями()
	
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапкеДокумента().Выбрать();
	ВыборкаПоШапкеДокумента.Следующий();
	
	ВыборкаПоТЧРаботникиОрганизации = СформироватьЗапросПоТЧРаботникиОрганизации().Выбрать();
	
	Отказ = Ложь;
	
	Заголовок = ОбщегоНазначенияЗК.ПредставлениеДокументаПриПроведении(СсылкаНаОбъект);
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаявлениеВФССДополнительныеДниОтпуска";
	
	Макет = ПолучитьМакет("МакетСОбластями");
	
	ТекущиеТарифыСВ = РасчетСтраховыхВзносов.ТекущиеТарифыСтраховыхВзносовПоВидамТарифа(СсылкаНаОбъект.Дата);
	ТарифСВ = ТекущиеТарифыСВ.Найти(Перечисления.ТарифыСтраховыхВзносов.ОбщийНалоговыйРежим);
	
	ИтогоПособия = 0;
	ИтогоСреднедневнойЗаработок = 0;
	ИтогоПособияСВзносами = 0;
	НомерСтроки = 0;
	
	Макет = МакетЗаявленияОВозмещенииСЗаполненнымиШапкойИПодвалом(ВыборкаПоШапкеДокумента, Макет);
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	
	ТабДокумент.Вывести(ОбластьШапка);
	ТабДокумент.Вывести(ОбластьШапкаТаблицы);
	
	Пока ВыборкаПоТЧРаботникиОрганизации.Следующий() Цикл
		НомерСтроки = НомерСтроки + 1;
		Фамилия = ВыборкаПоТЧРаботникиОрганизации.Фамилия;
		Имя = ВыборкаПоТЧРаботникиОрганизации.Имя;
		Отчество = ВыборкаПоТЧРаботникиОрганизации.Отчество;
		
		ПрефиксСтроки = "ФИО_01_";
		ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(ВРег(Фамилия), Макет, ПрефиксСтроки, 19);
		ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(ВРег(Имя), 	Макет, ПрефиксСтроки, 19, 20);
		ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(ВРег(Отчество),Макет, ПрефиксСтроки, 19, 39);
		
		ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(ВыборкаПоТЧРаботникиОрганизации.НормаДней / ВыборкаПоТЧРаботникиОрганизации.КоличествоСотрудников, Макет, "Дни1_", 1);
		
	Если ВыборкаПоТЧРаботникиОрганизации.НормаДней <> 0 Тогда
		ОбменСведениямиОПособияхСФСС.ВывестиСуммуВРубляхКопейкахВЯчейки(ВыборкаПоТЧРаботникиОрганизации.СуммаПособия / ВыборкаПоТЧРаботникиОрганизации.НормаДней * ВыборкаПоТЧРаботникиОрганизации.КоличествоСотрудников, Макет, "РазмерПособия1_", 6);
	Иначе
		ОбменСведениямиОПособияхСФСС.ВывестиСуммуВРубляхКопейкахВЯчейки(0, Макет, "РазмерПособия1_", 6);
		Сообщить("!!!");
	КонецЕсли;
	
		
		//Макет.Области["Статус" + НомерСтроки].Текст = ВыборкаПоТЧРаботникиОрганизации.Статус;
		ОбменСведениямиОПособияхСФСС.ВывестиСуммуВРубляхКопейкахВЯчейки(ВыборкаПоТЧРаботникиОрганизации.СуммаПособия, Макет, "СуммаВыплаты1_", 7);
		
		ДанныеВзносов = ЗаполнитьВзносы(ТарифСВ, ВыборкаПоТЧРаботникиОрганизации.СуммаПособия);
		
		ОбменСведениямиОПособияхСФСС.ВывестиСуммуВРубляхКопейкахВЯчейки(ДанныеВзносов.ПФР, Макет, "ПФР1_", 7);
		ОбменСведениямиОПособияхСФСС.ВывестиСуммуВРубляхКопейкахВЯчейки(ДанныеВзносов.ФСС, Макет, "ФСС1_", 7);
		ОбменСведениямиОПособияхСФСС.ВывестиСуммуВРубляхКопейкахВЯчейки(ДанныеВзносов.ФФОМС, Макет, "ФФОМС1_", 7);
		
		//ИтогоСреднедневнойЗаработок = ИтогоСреднедневнойЗаработок + ВыборкаПоТЧРаботникиОрганизации.СреднедневнойЗаработокРасчетный;
		ИтогоПособия = ИтогоПособия + ВыборкаПоТЧРаботникиОрганизации.СуммаПособия;
		ИтогоПособияСВзносами = ИтогоПособияСВзносами + ВыборкаПоТЧРаботникиОрганизации.СуммаПособия + ДанныеВзносов.ПФР + ДанныеВзносов.ФСС + ДанныеВзносов.ФФОМС;
		
		ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(НомерСтроки, Макет, "НомерСтроки", 1);
		
		ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
		ТабДокумент.Вывести(ОбластьСтрокаТаблицы);
		
	КонецЦикла;
	
	МассивПараметровИзКомментария = ОбщегоНазначенияЗК.РазложитьСтрокуВМассивПодстрок(СсылкаНаОбъект.Комментарий, " ");
	
	ИндексКБК = МассивПараметровИзКомментария.Найти("КБК");
	Если ИндексКБК <> Неопределено Тогда
		
		КБК = МассивПараметровИзКомментария[ИндексКБК+1];
		ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(КБК, Макет, "КБК_", 20);
		
	КонецЕсли;
	
	ОбменСведениямиОПособияхСФСС.ВывестиСуммуВРубляхКопейкахВЯчейки(ИтогоПособия, Макет, "ИтогоРазмерПособия", 9);
	ОбменСведениямиОПособияхСФСС.ВывестиСуммуВРубляхКопейкахВЯчейки(ИтогоПособияСВзносами, Макет, "ИтогоСВзносами", 10);
	
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	
	ТабДокумент.Вывести(ОбластьПодвалТаблицы);
	ТабДокумент.Вывести(ОбластьПодвал);
	
	Возврат УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, 1, Ложь, "Заявление о возмещении расходов на оплату выходных дней (ВНЕШНИЙ)", , ТабДокумент);
	//Возврат ТабДокумент;	
	
КонецФункции // ПечатьСОбластями()


